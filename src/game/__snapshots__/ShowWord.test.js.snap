// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ShowWord renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ShowWord
    answers={Object {}}
    word="Wort"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <TransitionGroup
          childFactory={[Function]}
          className="word-cards"
          component="div"
>
          <CSSTransition
                    classNames="word-card"
                    timeout={1000}
          >
                    <Well
                              bsClass="well"
                              className="word"
                    >
                              <span
                                        className="word-article"
                              >
                                        ...
                              </span>
                               
                    </Well>
          </CSSTransition>
</TransitionGroup>,
        <div
          className="buttons"
>
          <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="large"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
          >
                    der
          </Button>
          <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="large"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
          >
                    die
          </Button>
          <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="large"
                    bsStyle="default"
                    disabled={false}
                    onClick={[Function]}
          >
                    das
          </Button>
</div>,
      ],
      "className": "show-word",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "childFactory": [Function],
          "children": <CSSTransition
            classNames="word-card"
            timeout={1000}
>
            <Well
                        bsClass="well"
                        className="word"
            >
                        <span
                                    className="word-article"
                        >
                                    ...
                        </span>
                         
            </Well>
</CSSTransition>,
          "className": "word-cards",
          "component": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Well
              bsClass="well"
              className="word"
>
              <span
                            className="word-article"
              >
                            ...
              </span>
               
</Well>,
            "classNames": "word-card",
            "timeout": 1000,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "well",
              "children": Array [
                <span
                  className="word-article"
>
                  ...
</span>,
                " ",
                undefined,
              ],
              "className": "word",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "...",
                  "className": "word-article",
                },
                "ref": null,
                "rendered": "...",
                "type": "span",
              },
              " ",
              undefined,
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="large"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
>
              der
</Button>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="large"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
>
              die
</Button>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="large"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
>
              das
</Button>,
          ],
          "className": "buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "der",
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "large",
              "bsStyle": "default",
              "children": "der",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "der",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "die",
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "large",
              "bsStyle": "default",
              "children": "die",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "die",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "das",
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "large",
              "bsStyle": "default",
              "children": "das",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "das",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TransitionGroup
            childFactory={[Function]}
            className="word-cards"
            component="div"
>
            <CSSTransition
                        classNames="word-card"
                        timeout={1000}
            >
                        <Well
                                    bsClass="well"
                                    className="word"
                        >
                                    <span
                                                className="word-article"
                                    >
                                                ...
                                    </span>
                                     
                        </Well>
            </CSSTransition>
</TransitionGroup>,
          <div
            className="buttons"
>
            <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsSize="large"
                        bsStyle="default"
                        disabled={false}
                        onClick={[Function]}
            >
                        der
            </Button>
            <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsSize="large"
                        bsStyle="default"
                        disabled={false}
                        onClick={[Function]}
            >
                        die
            </Button>
            <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsSize="large"
                        bsStyle="default"
                        disabled={false}
                        onClick={[Function]}
            >
                        das
            </Button>
</div>,
        ],
        "className": "show-word",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "childFactory": [Function],
            "children": <CSSTransition
              classNames="word-card"
              timeout={1000}
>
              <Well
                            bsClass="well"
                            className="word"
              >
                            <span
                                          className="word-article"
                            >
                                          ...
                            </span>
                             
              </Well>
</CSSTransition>,
            "className": "word-cards",
            "component": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Well
                bsClass="well"
                className="word"
>
                <span
                                className="word-article"
                >
                                ...
                </span>
                 
</Well>,
              "classNames": "word-card",
              "timeout": 1000,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "well",
                "children": Array [
                  <span
                    className="word-article"
>
                    ...
</span>,
                  " ",
                  undefined,
                ],
                "className": "word",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "...",
                    "className": "word-article",
                  },
                  "ref": null,
                  "rendered": "...",
                  "type": "span",
                },
                " ",
                undefined,
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="large"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
>
                der
</Button>,
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="large"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
>
                die
</Button>,
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="large"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
>
                das
</Button>,
            ],
            "className": "buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "der",
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "large",
                "bsStyle": "default",
                "children": "der",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "der",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "die",
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "large",
                "bsStyle": "default",
                "children": "die",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "die",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "das",
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "large",
                "bsStyle": "default",
                "children": "das",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "das",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
